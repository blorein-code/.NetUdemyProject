@using ProgrammersBlog.Shared.Utilities.Results.ComplexTypes
@model ProgrammersBlog.Entities.Dtos.CategoryListDto
@{

    ViewBag.Title = "Kategoriler Index";
}
@if (Model.ResultStatus == ResultStatus.Success)
{
    <div id="modalPlaceHolder" aria-hidden="true"></div>
    <div class="card mb-4 mt-2">
        <div class="card-header">
            <i class="fas fa-table mr-1"></i>
            Kategoriler
        </div>

        <div class="card-body">
            <div class="spinner-border" role="status" style="display:none;">
                <span class="sr-only">Yükleniyor...</span>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered " id="categoriesTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Kategori Adı</th>
                            <th>Açıklama</th>
                            <th>Aktif Mi?</th>
                            <th>Silinmiş Mi?</th>
                            <th>Not</th>
                            <th>Oluşturulma Tarihi</th>
                            <th>Oluşturan Kişi</th>
                            <th>Son Düzenleme Tarihi </th>
                            <th>Son Düzenleyen Kişi</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>ID</th>
                            <th>Kategori Adı</th>
                            <th>Açıklama</th>
                            <th>Aktif Mi?</th>
                            <th>Silinmiş Mi?</th>
                            <th>Not</th>
                            <th>Oluşturulma Tarihi</th>
                            <th>Oluşturan Kişi</th>
                            <th>Son Düzenleme Tarihi </th>
                            <th>Son Düzenleyen Kişi</th>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var category in Model.Categories)
                        {
                            <tr>
                                <td>@category.Id</td>
                                <td>@category.Name</td>
                                <td>@category.Description</td>
                                <td>@category.IsActive</td>
                                <td>@category.IsDeleted</td>
                                <td>@category.Note</td>
                                <td>@category.CreatedDate.ToShortDateString()</td>
                                <td>@category.CreatedByName</td>
                                <td>@category.ModifiedDate.ToShortDateString()</td>
                                <td>@category.ModifiedByName</td>
                                <td>
                                    <button class="btn btn-primary">Düzenle</button>
                                    <button class="btn btn-danger btn-delete">Sil</button>
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
@if (Model.ResultStatus == ResultStatus.Error)
{
    <div class="alert alert-danger mt-3">
        @Model.Message <br />
        Dashboard Sayfasına Geri Dönmek İçin Lütfen <a class="alert-link" asp-area="Admin" asp-controller="Home" asp-action="Index">Tıklayınız.</a>
    </div>
}
@section Scripts
{
    <script>
            $(document).ready(function () {
                $('#categoriesTable').DataTable({
                    dom: "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" + "<'row'<'col-sm-12'tr>>" + "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                    buttons: [
                        {
                            text: 'Ekle',
                            attr: {
                                id:"btnAdd",
                            },
                            className: 'btn btn-success',
                            action: function (e, dt, node, config) {

                            }
                        },
                        {
                            text: 'Yenile',
                            className: 'btn btn-info text-white',
                            action: function (e, dt, node, config) {
                                $.ajax({
                                    type: 'GET',
                                    url: '@Url.Action("GetAllCategories","Category")',
                                    contentType: "application/json",
                                    beforeSend: function () {
                                        $('#categoriesTable').hide();
                                        $('.spinner-border').show();
                                    },
                                    success: function (data) {
                                        const categoryListDto = jQuery.parseJSON(data);
                                        /*console.log(categoryListDto)*/
                                        if (categoryListDto.ResultStatus === 0) {
                                            let tableBody = "";
                                            $.each(categoryListDto.Categories.$values, function (index, category) {
                                                tableBody += `
                                                 <tr>
                                <td>${category.id}</td>
                                <td>${category.Name}</td>
                                <td>${category.Description}</td>
                                <td>${convertFirstLetterToUpperCase(category.IsActive.toString())}</td>
                                <td>${convertFirstLetterToUpperCase(category.IsDeleted.toString())}</td>
                                <td>${convertToShortDate(category.CreatedDate)}</td>
                                <td>${convertToShortDate(category.CreatedDate)}</td>
                                <td>${category.CreatedByName}</td>
                                <td>${convertToShortDate(category.ModifiedDate)}</td>
                                <td>${category.ModifiedByName}</td>
                            </tr>`;

                                            });
                                            $('#categoriesTable > tbody').replaceWith(tableBody);
                                            $('.spinner-border').hide();
                                            $('#categoriesTable').fadeIn(2000);
                                        }
                                        else {
                                            toastr.error(`${categoryListDto.Message}`, 'İşlem Başarısız!')
                                        }
                                    },
                                    error: function (err) {
                                        console.log(err);
                                        toastr.error(`${err.statusText}`,'İşlem Başarısız!')
                                    }
                                });
                            }
                        },
                    ],

                });
                @*DataTables ends here  *@
                $(function () {
                    const url = '@Url.Action("Add","Category")';
                    const placeHolderDiv = $("#modalPlaceHolder");
                    $('#btnAdd').click(function () {
                        $.get(url).done(function (data) {
                            placeHolderDiv.html(data);
                            placeHolderDiv.find(".modal").modal('show');
                        });
                    });
                    placeHolderDiv.on('click', '#btnSave', function (event) {
                        event.preventDefault();
                        const form = $('#form-category-add');
                        const actionUrl = form.attr('action');
                        const dataToSend = form.serialize();
                        $.post(actionUrl, dataToSend).done(function (data) {
                            const categoryAddAjaxModel = jQuery.parseJSON(data);
                            const newFormBody = $('.model-body', categoryAddAjaxModel.CategoryAddPartial);
                            placeHolderDiv.find('.modal-body').replaceWith(newFormBody);
                            const isValid = newFormBody.find('[name"IsValid"]').val() !== 'False';
                            debugger;
                            if (isValid) {
                                placeHolderDiv.find('.modal').modal('hide');

                                const newTableRow = ` <tr>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.Id}</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.Name}</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.Description}</td>
                                <td>${convertFirstLetterToUpperCase(categoryAddAjaxModel.CategoryDto.Category.IsActive.toString())}</td>
                                <td>${convertFirstLetterToUpperCase(categoryAddAjaxModel.CategoryDto.Category.IsDeleted.toString())}</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.Note}</td>
                                <td>${convertToShortDate(categoryAddAjaxModel.CategoryDto.Category.CreatedDate)}</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.CreatedByName}</td>
                                <td>${convertToShortDate(categoryAddAjaxModel.CategoryDto.Category.ModifiedDate)}</td>
                                <td>${categoryAddAjaxModel.CategoryDto.Category.ModifiedByName}</td>
                            </tr>`;
                                const newTableRowObject = $(newTableRow);
                                //newTableRowObjet.hide();
                                $('#categoriesTable').append(newTableRowObject);
                                newTableRowObject.fadeIn(3500);
                                toastr.success(`${categoryAddAjaxModel.CategoryDto.Message}`, 'Başarılı İşlem!');

                            } else {
                                let summaryText = "";
                                $('#validation-summary > ul > li').each(function () {
                                    let text = $(this).text();
                                    summaryText = `${text}\n`;
                                });

                                toastr.warning(summaryText);
                            }

                        });
                    });
                });
            });
    </script>
}